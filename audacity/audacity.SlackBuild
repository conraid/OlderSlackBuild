#!/bin/bash
#
# Slackware build script for audacity
#
# Copyright 2017-2021 Corrado Franco (https://corradofranco.it)
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.
#
# Latest version of this SlackBuild at https://github.com/conraid/SlackBuilds

set -eu

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=Audacity
PKGNAM=$(echo $PRGNAM | tr A-Z a-z)
VERSION=3.0.2
WXVERSION=3.0.5.1
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

DOCFILES="*.txt"

if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME:-""}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-${BUILD}${TAG}.txz"
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PKGNAM-$PRGNAM-$VERSION
tar xvf $CWD/$PKGNAM-$PRGNAM-$VERSION.tar.gz || tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PKGNAM-$PRGNAM-$VERSION

chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

# fix vamp plugin search path on x86_64 - thanks to B. Watson and SBo
sed "s|lib/vamp|lib$LIBDIRSUFFIX/vamp|g" -i lib-src/libvamp/src/vamp-hostsdk/PluginHostAdapter.cpp

mkdir -p build
cd build

cmake -Wno-dev \
  -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS -DNDEBUG" \
  -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCFLAGS -std=gnu++11 -DNDEBUG" \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -Daudacity_use_wxwidgets="local" \
  -Daudacity_lib_preference="system" \
  -Daudacity_use_expat=system \
  -Daudacity_use_ffmpeg=linked \
  -Daudacity_use_flac=system \
  -Daudacity_use_id3tag=system \
  -Daudacity_use_ladspa:BOOL="ON" \
  -Daudacity_use_lame=system \
  -Daudacity_use_lv2="local" \
  -Daudacity_use_mad=system \
  -Daudacity_use_ogg=system \
  -Daudacity_use_pa_alsa:BOOL="ON" \
  -Daudacity_use_pa_jack=linked \
  -Daudacity_use_portaudio="local" \
  -Daudacity_use_sndfile=system \
  -Daudacity_use_soxr="local" \
  -Daudacity_use_soundtouch=system \
  -Daudacity_use_twolame=system \
  -Daudacity_use_vamp=system \
  -Daudacity_use_vorbis=system \
  ..

make
make DESTDIR=$PKG install
cd ..

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find $PKG | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -exec chmod 644 {} \; -exec gzip -9 {} \;
  for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a $DOCFILES $PKG/usr/doc/$PKGNAM-$VERSION || true
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

install -Dm744 $CWD/files/$PKGNAM.desktop $PKG/usr/share/applications/$PKGNAM.desktop
install -Dm744 $CWD/files/$PKGNAM.png $PKG/usr/share/pixmaps/$PKGNAM.png

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
