#!/bin/bash
#
# Slackware build script for nmp.js
#
# Copyright 2015-2020 Corrado Franco (https://corradofranco.it)
#
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.
#
# Latest version of this SlackBuild at https://github.com/conraid/SlackBuilds

set -eu

CWD=$(pwd)

PRGNAM=cli
PKGNAM=npm
VERSION=6.14.8
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

DOCFILES="AUTHORS CHANGELOG* CONTRIBUTING* LICENSE README* doc/*"

if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi


# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME:-""}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-${BUILD}${TAG}.txz"
  exit 0
fi

[ "$ARCH" = "x86_64" ] && LIBDIRSUFFIX="64" || LIBDIRSUFFIX=""

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-*
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz || tar xvf $CWD/v$VERSION.tar.gz
cd $PRGNAM-$VERSION

chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

# Apply patches
if [ -e $CWD/patches/ ]; then
  for PATCH in $CWD/patches/*.patch; do
    patch -p1 -i $PATCH
  done
fi

# Fix libdir for 64-bit.
sed "s/'lib'/'lib${LIBDIRSUFFIX}'/" -i lib/npm.js

NODE_PATH=/usr/lib${LIBDIRSUFFIX}/nome_modules make DESTDIR=$PKG install

# Non-deterministic race in npm gives 777 permissions to random directories.
# See https://github.com/npm/npm/issues/9359 for details.
chmod -R u=rwX,go=rX $PKG

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find $PKG | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

# Fix files owned by nobody:
chown -R root:root $PKG

# Fix node-gyp
sed -e 's|`dirname "$0"`/../../|/usr/lib%LIBDIRSUFFIX%/node_modules/npm/|' \
    -e "s/%LIBDIRSUFFIX%/$LIBDIRSUFFIX/" \
    -i $PKG/usr/lib${LIBDIRSUFFIX}/node_modules/npm/bin/node-gyp-bin/node-gyp

# Make symbolic link of node-gyp
ln -s /usr/lib${LIBDIRSUFFIX}/node_modules/npm/bin/node-gyp-bin/node-gyp $PKG/usr/bin/node-gyp

if [ -d $PKG/usr/lib${LIBDIRSUFFIX}/node_modules/npm/man/ ]; then
  find $PKG/usr/lib${LIBDIRSUFFIX}/node_modules/npm/man/ -type f -exec gzip -9 {} \;
fi

# Fix symbolic link of npm man pages
rm -f $PKG/usr/man/man{1,5,7}/*
mkdir -p $PKG/usr/man/man{1,5,7}
for DIR in man{1,5,7}; do
  cd $PKG/usr/lib${LIBDIRSUFFIX}/node_modules/npm/man/$DIR
  for FILE in *; do
    ln -s /usr/lib${LIBDIRSUFFIX}/node_modules/npm/man/$DIR/$FILE $PKG/usr/man/$DIR/
  done
  cd -
done

# Fix npm prefix to man5 and man7
pushd $PKG/usr/man/
for i in man{5,7}; do
  cd "$i"
    for j in *; do
      mv "${j}" "npm-${j}"
    done
  cd -
done
popd

# Remove empty share
rm -rf $PKG/usr/share

# Remove unneeded files.
find $PKG/usr \( -name '.git*' -o -name '.travis.yml' \) -exec rm -f {} \;

# Remove occurrences of $PKG
find $PKG -name "package.json" \
  -exec sed -e "s|$TMP/$PKGNAM-build||" \
            -e "s|$TMP/$PKGNAM-${VERSION}|/usr/lib${LIBDIRSUFFIX}/node_modules/${PKGNAM}|" \
            -i '{}' \;

# Add bash completion file
install -D -m 644 lib/utils/completion.sh $PKG/etc/bash_completion.d/npm

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a $DOCFILES $PKG/usr/doc/$PKGNAM-$VERSION || true
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Fix some permissions
chmod +x $PKG/usr/lib64/node_modules/npm/bin/node-gyp-bin/*
chmod +x $PKG/usr/lib64/node_modules/npm/bin/npm

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
