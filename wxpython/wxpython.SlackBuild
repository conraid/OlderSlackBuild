#!/bin/bash
#
# Slackware build script for wxpython
#
# Copyright 2019 Corrado Franco (https://conraid.net)
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.
#
# Latest version of this SlackBuild at https://github.com/conraid/SlackBuilds

set -eu

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=wxPython
PKGNAM=wxpython
VERSION=3.0.2.0
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

DOCFILES="LICENSE *.md *.rst"

if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
  i?86) ARCH=i686 ;;
  arm*) ARCH=arm ;;
     *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME:-""}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz "
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-src-$VERSION
tar xvf $CWD/$PRGNAM-src-$VERSION.tar.bz2
cd $PRGNAM-src-$VERSION

chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .

# Apply patches
if [ -e $CWD/patches/ ]; then
  for PATCH in $CWD/patches/*.patch; do
    patch -p1 -i $PATCH
  done
fi

./configure \
  --prefix=/usr \
  --libdir=/usr/lib \
  --includedir=/usr/include \
  --with-gtk=3 \
  --enable-unicode \
  --enable-plugins \
  --with-sdl \
  --with-opengl \
  --with-libmspack \
  --enable-mediactrl \
  --enable-graphics_ctx \
  --enable-ipv6 \
  --enable-shared \
  --with-wx-config=/usr/bin/wx-config

cd wxPython
python setup.py WX_CONFIG=/usr/bin/wx-config WXPORT=gtk3 UNICODE=1 build
python setup.py WX_CONFIG=/usr/bin/wx-config WXPORT=gtk3 UNICODE=1 install --root=$PKG --optimize=1

install -Dm 644 distrib/*.desktop -t $PKG/usr/share/applications/
install -Dm 644 wx/py/PyCrust_16.png $PKG/usr/share/icons/hicolor/16x16/apps/PyCrust.png
install -Dm 644 wx/py/PyCrust_32.png $PKG/usr/share/icons/hicolor/32x32/apps/PyCrust.png
mkdir -p $PKG/usr/share/pixmaps
ln -s /usr/share/icons/hicolor/32x32/apps/PyCrust.png $PKG/usr/share/pixmaps/PyCrust.png
install -Dm 644 wx/py/PySlices_16.png $PKG/usr/share/icons/hicolor/16x16/apps/PySlices.png
install -Dm 644 wx/py/PySlices_32.png $PKG/usr/share/icons/hicolor/32x32/apps/PySlices.png
ln -s /usr/share/icons/hicolor/32x32/apps/PySlices.png $PKG/usr/share/pixmaps/PySlices.png
install -Dm 644 wx/tools/XRCed/XRCed_16.png $PKG/usr/share/icons/hicolor/16x16/apps/XRCed.png
install -Dm 644 wx/tools/XRCed/XRCed_32.png $PKG/usr/share/icons/hicolor/32x32/apps/XRCed.png
ln -s /usr/share/icons/hicolor/32x32/apps/XRCed.png $PKG/usr/share/pixmaps/XRCed.png

cd -

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find $PKG | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -exec chmod 644 {} \; -exec gzip -9 {} \;
  for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a $DOCFILES $PKG/usr/doc/$PKGNAM-$VERSION || true
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
